/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./public/js/server.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./client/src/services/_getBloodRegister.js":
/*!**************************************************!*\
  !*** ./client/src/services/_getBloodRegister.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (async() => fetch('http://localhost:5000/blood-register', {\n  method: 'GET', // *GET, POST, PUT, DELETE, etc.\n  // mode: 'no-cors', // no-cors, cors, *same-origin\n  cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n  credentials: 'same-origin', // include, *same-origin, omit\n  headers: {\n    // 'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': 'no-cors',\n    'Access-Control-Request-Headers': 'content-type',\n    'Content-Type': 'application/json',\n  },\n  redirect: 'follow', // manual, *follow, error\n  referrer: 'no-referrer', // no-referrer, *client\n})\n  .then(res => res.json())\n  .then(res => {\n    return {\n      isLoaded: true,\n      data: res,\n    }\n  })\n  .catch(err => console.log(err)));\n\n//# sourceURL=webpack:///./client/src/services/_getBloodRegister.js?");

/***/ }),

/***/ "./public/js/Auth/Authadmin.js":
/*!*************************************!*\
  !*** ./public/js/Auth/Authadmin.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsonwebtoken */ \"jsonwebtoken\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../db */ \"./public/js/db.js\");\n\n \n\nconst Authadmin = {\n  /**\n   * Verify Token\n   * @param {object} req \n   * @param {object} res \n   * @param {object} next\n   * @returns {object|void} response object \n   */\n  async verifyToken(req, res, next) {\n    const token = req.headers['x-access-token'];\n    if(!token) {\n      return res.status(400).send({ 'message': 'Token is not provided' });\n    }\n    try {\n      const decoded = await jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default.a.verify(token, process.env.SECRET);\n      const text = 'SELECT * FROM admin WHERE id = $1';\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(text, [decoded.userId]);\n      if(!rows[0]) {\n        return res.status(400).send({ 'message': 'The token you provided is invalid' });\n      }\n      req.user = { id: decoded.userId };\n      next();\n    } catch(error) {\n      return res.status(400).send(error);\n    }\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Authadmin);\n\n//# sourceURL=webpack:///./public/js/Auth/Authadmin.js?");

/***/ }),

/***/ "./public/js/Auth/Authbanks.js":
/*!*************************************!*\
  !*** ./public/js/Auth/Authbanks.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsonwebtoken */ \"jsonwebtoken\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../db */ \"./public/js/db.js\");\n\n \n\nconst Authbanks = {\n  /**\n   * Verify Token\n   * @param {object} req \n   * @param {object} res \n   * @param {object} next\n   * @returns {object|void} response object \n   */\n  async verifyToken(req, res, next) {\n    const token = req.headers['x-access-token'];\n    if(!token) {\n      return res.status(400).send({ 'message': 'Token is not provided' });\n    }\n    try {\n      const decoded = await jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default.a.verify(token, process.env.SECRET);\n      const text = 'SELECT * FROM BloodBank WHERE id = $1';\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(text, [decoded.userId]);\n      if(!rows[0]) {\n        return res.status(400).send({ 'message': 'The token you provided is invalid' });\n      }\n      req.user = { id: decoded.userId };\n      next();\n    } catch(error) {\n      return res.status(400).send(error);\n    }\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Authbanks);\n\n//# sourceURL=webpack:///./public/js/Auth/Authbanks.js?");

/***/ }),

/***/ "./public/js/Auth/Authdonor.js":
/*!*************************************!*\
  !*** ./public/js/Auth/Authdonor.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsonwebtoken */ \"jsonwebtoken\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../db */ \"./public/js/db.js\");\n\n \n\nconst Authdonor = {\n  /**\n   * Verify Token\n   * @param {object} req \n   * @param {object} res \n   * @param {object} next\n   * @returns {object|void} response object \n   */\n  async verifyToken(req, res, next) {\n    const token = req.body.token || req.headers['x-access-token'];\n    if(!token) {\n      return res.status(400).send({ 'message': 'Token is not provided' });\n    }\n    try {\n      const decoded = await jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default.a.verify(token, process.env.SECRET);\n      const text = 'SELECT * FROM donors WHERE id = $1';\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(text, [decoded.userId]);\n      if(!rows[0]) {\n        return res.status(400).send({ 'message': 'The token you provided is invalid' });\n      }\n      req.user = { id: decoded.userId };\n      next();\n    } \n    catch(error) {\n      return res.status(400).send(error);\n    }\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Authdonor);\n\n//# sourceURL=webpack:///./public/js/Auth/Authdonor.js?");

/***/ }),

/***/ "./public/js/Auth/Authhospital.js":
/*!****************************************!*\
  !*** ./public/js/Auth/Authhospital.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsonwebtoken */ \"jsonwebtoken\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../db */ \"./public/js/db.js\");\n\n \n\nconst Authhospital = {\n  /**\n   * Verify Token\n   * @param {object} req \n   * @param {object} res \n   * @param {object} next\n   * @returns {object|void} response object \n   */\n  async verifyToken(req, res, next) {\n    const token = req.headers['x-access-token'];\n    if(!token) {\n      return res.status(400).send({ 'message': 'Token is not provided' });\n    }\n    try {\n      const decoded = await jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default.a.verify(token, process.env.SECRET);\n      const text = 'SELECT * FROM hospital WHERE id = $1';\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(text, [decoded.userId]);\n      if(!rows[0]) {\n        return res.status(400).send({ 'message': 'The token you provided is invalid' });\n      }\n      req.user = { id: decoded.userId };\n      next();\n    } catch(error) {\n      return res.status(400).send(error);\n    }\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Authhospital);\n\n//# sourceURL=webpack:///./public/js/Auth/Authhospital.js?");

/***/ }),

/***/ "./public/js/Controllerdb.js":
/*!***********************************!*\
  !*** ./public/js/Controllerdb.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var uuid_v4__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uuid/v4 */ \"uuid/v4\");\n/* harmony import */ var uuid_v4__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uuid_v4__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./db */ \"./public/js/db.js\");\n/* harmony import */ var _Helper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Helper */ \"./public/js/Helper.js\");\n/* harmony import */ var _client_src_services_getBloodRegister__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../client/src/services/_getBloodRegister */ \"./client/src/services/_getBloodRegister.js\");\n\n\n\n\n\nconst Controllerdb = {\n  /**\n   * Create A donor\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} reflection object\n   */\n  async create(req, res) {\n    console.log('req.body.email'+ req.body.email);\n    console.log('req.body.password'+ req.body.password);\n    console.log('req.body'+ JSON.stringify(req.body));\n    if (!req.body.email || !req.body.password) {\n      return res.status(400).send({ 'message': 'Some values are missing' });\n    }\n    if (!_Helper__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isValidEmail(req.body.email)) {\n      return res\n        .status(400)\n        .send({ 'message': 'Please enter a valid email address' });\n    }\n    const hashPassword = _Helper__WEBPACK_IMPORTED_MODULE_2__[\"default\"].hashPassword(req.body.password);\n    const createQuery = 'Insert into donors(id,first_name,last_name, email, password, DateOfBirth,blood_type, gender, address, contact_no) VALUES($1, $2, $3, $4, $5, $6, $7, $8, $9, $10) returning *';\n    const values = [\n      uuid_v4__WEBPACK_IMPORTED_MODULE_0___default()(),\n      req.body.first_name,\n      req.body.last_name,\n      req.body.email,\n      hashPassword,\n      req.body.DateOfBirth,\n      req.body.blood_type,\n      req.body.gender,\n      req.body.address,\n      req.body.contact_no\n    ];\n\n    try {\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(createQuery, values);\n      if (rows[0])\n        return res.status(200).send({ 'Message':'signup successful' });\n    } catch (error) {\n      if (error.routine === \"_bt_check_unique\") {\n        return res\n          .status(400)\n          .send({ 'message': 'Donor with that EMAIL already exist' });\n      }\n      return res.status(400).send(error);\n    }\n  },\n  async adminSignUp(req, res) {\n    console.log('req.body.email'+ req.body.email);\n    console.log('req.body.password'+ req.body.password);\n    console.log('req.body'+ JSON.stringify(req.body));\n    if (!req.body.email || !req.body.password) {\n      return res.status(400).send({ 'message': 'Some values are missing' });\n    }\n    if (!_Helper__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isValidEmail(req.body.email)) {\n      return res\n        .status(400)\n        .send({ 'message': 'Please enter a valid email address' });\n    }\n    // const hashPassword = Helper.hashPassword(req.body.password);\n    const createQuery = 'Insert into admin(id, email, password) VALUES($1, $2, $3) returning *';\n    const values = [\n      uuid_v4__WEBPACK_IMPORTED_MODULE_0___default()().substr(0, 30),\n      req.body.email,\n      req.body.password\n    ];\n\n    try {\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(createQuery, values);\n      if (rows[0])\n        return res.status(200).send({ 'Message':'signup successful' });\n    } catch (error) {\n      if (error.routine === \"_bt_check_unique\") {\n        return res\n          .status(400)\n          .send({ 'message': 'Admin with that EMAIL already exist' });\n      }\n      return res.status(400).send(error);\n    }\n  },\n  async bankSignUp(req, res) {\n    console.log('req.body.email'+ req.body.email);\n    console.log('req.body.password'+ req.body.password);\n    console.log('req.body'+ JSON.stringify(req.body));\n    if (!req.body.email || !req.body.password) {\n      return res.status(400).send({ 'message': 'Some values are missing' });\n    }\n    if (!_Helper__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isValidEmail(req.body.email)) {\n      return res\n        .status(400)\n        .send({ 'message': 'Please enter a valid email address' });\n    }\n    // const hashPassword = Helper.hashPassword(req.body.password);\n    const createQuery = 'Insert into bloodbank(id, name, email, address, password, admin_id) VALUES($1, $2, $3, $4, $5, $6) returning *';\n    const values = [\n      uuid_v4__WEBPACK_IMPORTED_MODULE_0___default()(),\n      req.body.name,\n      req.body.email,\n      req.body.address,\n      req.body.password,\n      req.body.admin_id,\n    ];\n\n    try {\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(createQuery, values);\n      if (rows[0])\n        return res.status(200).send({ 'Message':'signup successful' });\n    } catch (error) {\n      if (error.routine === \"_bt_check_unique\") {\n        return res\n          .status(400)\n          .send({ 'message': 'Bank with that EMAIL already exist' });\n      }\n      return res.status(400).send(error);\n    }\n  },\n  async hospitalSignUp(req, res) {\n    console.log('req.body.email'+ req.body.email);\n    console.log('req.body.password'+ req.body.password);\n    console.log('req.body'+ JSON.stringify(req.body));\n    if (!req.body.email || !req.body.password) {\n      return res.status(400).send({ 'message': 'Some values are missing' });\n    }\n    if (!_Helper__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isValidEmail(req.body.email)) {\n      return res\n        .status(400)\n        .send({ 'message': 'Please enter a valid email address' });\n    }\n    // const hashPassword = Helper.hashPassword(req.body.password);\n    const createQuery = 'Insert into hospital(id, address, name, email, admin_id, password) VALUES($1, $2, $3, $4, $5, $6) returning *';\n    const values = [\n      uuid_v4__WEBPACK_IMPORTED_MODULE_0___default()(),\n      req.body.address,\n      req.body.name,\n      req.body.email,\n      req.body.admin_id,\n      req.body.password\n    ];\n\n    try {\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(createQuery, values);\n      if (rows[0])\n        return res.status(200).send({ 'Message':'signup successful' });\n    } catch (error) {\n      if (error.routine === \"_bt_check_unique\") {\n        return res\n          .status(400)\n          .send({ 'message': 'Hospital with that EMAIL already exist' });\n      }\n      return res.status(400).send(error);\n    }\n  },\n  /**\n   * Login\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} Donor object\n   */\n  async login(req, res) {\n    if (!req.body.email || !req.body.password) {\n      console.log('failed');\n      return res.status(400).send({ 'message': 'Some values are missing' });\n    }\n    if (!_Helper__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isValidEmail(req.body.email)) {\n      return res\n        .status(400)\n        .send({ 'message': 'Please enter a valid email address' });\n    }\n    const text = 'SELECT * FROM donors WHERE email = $1';\n    try {\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(text, [req.body.email]);\n      console.log(rows);\n      if (!rows[0]) {\n        // console.log(2);\n        return res\n          .status(400)\n          .send({ 'message': 'The credentials you provided is incorrect' });\n      }\n        console.log(rows[0].password);\n        console.log(req.body.password);\n      if (!_Helper__WEBPACK_IMPORTED_MODULE_2__[\"default\"].comparePassword(rows[0].password, req.body.password)) {\n        return res\n          .status(400)\n          .send({ 'message': 'The credentials you provided is incorrect' });\n      }\n      const token = _Helper__WEBPACK_IMPORTED_MODULE_2__[\"default\"].generateToken(rows[0].id);\n      console.log(token);\n      return res.status(200).send({ token });\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  /**\n   * Delete A donor\n   * @param {object} req\n   * @param {object} res\n   * @returns {void} return status code 204\n   */\n  /*async delete(req, res) {\n    const deleteQuery = \"DELETE FROM donor WHERE id=$1 returning *\";\n    try {\n      const { rows } = await db.query(deleteQuery, [req.user.id]);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'donor not found' });\n      }\n      return res.status(204).send({ 'message': 'deleted' });\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },*/\n  async getAdmin(req, res) {\n    const profileQuery = 'Select * FROM admin';\n    try {\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(profileQuery);\n      if (!rows) {\n        return res.status(404).send({ 'message': 'admin not found'});\n      }\n      else {\n        return res.status(200).json(rows);\n      }\n    } catch (error) {\n      // console.log(1);\n      return res.status(400).send(error);\n    }\n  },\n  async profile(req, res) {\n    const profileQuery = 'Select * FROM donors';\n    try {\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(profileQuery);\n      if (!rows) {\n        return res.status(404).send({ 'message': 'donor not found'});\n      }\n      else {\n        return res.status(200).json(rows);\n      }\n    } catch (error) {\n      // console.log(1);\n      return res.status(400).send(error);\n    }\n  },\n  async edit(req, res) {\n    if (!req.body.email || !req.body.password) {\n      return res.status(400).send({ 'message': 'Some values are missing' });\n    }\n    if (!_Helper__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isValidEmail(req.body.email)) {\n      return res\n        .status(400)\n        .send({ 'message': 'Please enter a valid email address' });\n    }\n    const hashPassword0 = _Helper__WEBPACK_IMPORTED_MODULE_2__[\"default\"].hashPassword(req.body.password);\n    const editQuery =\n      \"Update donors set first_name=$1,last_name=$2, email=$3, password=$4, DateOfBirth=$5,blood_type=$6, gender=$7, address=$8, contact_no=$9 where id=$10 returning *\";\n    const values0 = [\n      req.body.first_name,\n      req.body.last_name,\n      req.body.email,\n      hashPassword0,\n      req.body.DateOfBirth,\n      req.body.blood_type,\n      req.body.gender,\n      req.body.address,\n      req.body.contact_no,\n      req.user.id\n    ];\n    try {\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(editQuery, values0);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'donor not found' });\n      }\n      return res.status(200).send({ 'message': 'updated' });\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async donate(req, res) {\n    if (!req.body.DateOfDonate || !req.body.bank_name) {\n      return res.status(400).send({ 'message': 'Some values are missing' });\n    }\n    const donateQuery =\n      \"Insert into blood(id,donor_id,bank_id,DateOfDonate) values ($1,$2,$3,$4) returning *\";\n    /* const checkdateQuery =\n      \"Select DateOfDonate,count(*) as k from blood where DateOfDonate=$1 group by DateOfDonate\";*/\n    const checkstatusQuery = \"Select * from register where donor_id=$1 and bank_id=$2\";\n    const checkbankQuery = \"Select * from BloodBank where name=$1\"\n    const registerQuery =\n      \"Insert into register(id,donor_id,bank_id,status) values($1,$2,$3,$4) returning *\";\n    try {\n      const rows0 = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(checkbankQuery, [req.body.bank_name]);\n      if (!rows0.rows[0]) {\n          return res.status(404).send({ 'message': 'bank name not found' });\n      }\n      const {rows} = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(checkstatusQuery,[req.user.id,rows0.rows[0].id]);\n      if (rows[0]){ \n        if (rows[0].status == \"B\")\n            return res.status(400).send({ 'message': 'donors banned' });\n      }\n      else {\n        const values1 = [uuid_v4__WEBPACK_IMPORTED_MODULE_0___default()(), req.user.id, rows0.rows[0].id ,'A'];\n        await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(registerQuery, values1)\n      }\n            /*\n            const rows0 = await db.query(checkdateQuery,[req.body.DateOfDonate]).rows;\n            if (rows0[0]) {\n              if (rows0[0].k > 1000)\n                return res.status(400).send({ 'message': 'date not availabe,too many people' });\n                */\n      const values2 = [uuid_v4__WEBPACK_IMPORTED_MODULE_0___default()(), req.user.id, rows0.rows[0].id, req.body.DateOfDonate];\n      const rows1 = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(donateQuery, values2);\n      if (!rows1.rows[0]) \n        return res.status(404).send({ 'message': 'donor not found' });\n      return res.status(200).send({ 'message': 'donate time setted' });\n    } catch (error) {\n        return res.status(400).send(error);\n    }\n  },\n  async getBlood(req, res) {\n    const getbanksQuery = \"Select * FROM blood\";\n    try {\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(getbanksQuery);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'record cannot be getted' });\n      }\n      else {\n        return res.status(200).json(rows);\n      }\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async history(req, res) {\n    const getbanksQuery = \"Select * from blood where donor_id=$1 and amount is not null\";\n    try {\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(getbanksQuery,[req.user.id]);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'record cannot be getted' });\n      }\n      return res.status(200).send(JSON.stringify(rows));\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async alogin(req, res) {\n    if (!req.body.email || !req.body.password) {\n      return res.status(400).send({ 'message': 'Some values are missing' });\n    }\n    const text = \"SELECT * FROM admin WHERE email = $1\";\n    try {\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(text, [req.body.email]);\n      if (!rows[0]) {\n        return res\n          .status(400)\n          .send({ 'message': 'The credentials you provided is incorrect' });\n      }\n      if (rows[0].password != req.body.password) {\n        return res\n          .status(400)\n          .send({ 'message': 'The password you provided is incorrect' });\n      }\n      const token = _Helper__WEBPACK_IMPORTED_MODULE_2__[\"default\"].generateToken(rows[0].id);\n      return res.status(200).send({ token });\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async addbank(req, res) {\n    if (!req.body.email || !req.body.password) {\n      return res.status(400).send({ 'message': 'Some values are missing' });\n    }\n    if (!_Helper__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isValidEmail(req.body.email)) {\n      return res\n        .status(400)\n        .send({ 'message': 'Please enter a valid email address' });\n    }\n    const hashPassword = _Helper__WEBPACK_IMPORTED_MODULE_2__[\"default\"].hashPassword(req.body.password);\n    const createQuery = 'Insert into BloodBank(id, name, email, address, password, admin_id) VALUES($1, $2, $3, $4, $5, $6) returning *';\n    const values = [\n      uuid_v4__WEBPACK_IMPORTED_MODULE_0___default()(),\n      req.body.name,\n      req.body.email,\n      req.body.address,\n      hashPassword,\n      req.user.id\n    ];\n\n    try {\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(createQuery, values);\n      if (rows[0])\n        return res.status(200).send({ 'Message':'add bank successful' });\n    } catch (error) {\n      if (error.routine === \"_bt_check_unique\") {\n        return res\n          .status(400)\n          .send({ 'message': 'bank with that EMAIL already exist' });\n      }\n      return res.status(400).send(error);\n    }\n  },\n  async getbanks(req, res) {\n    const getbanksQuery = \"Select * from BloodBank where admin_id=$1\";\n    try {\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(getbanksQuery,[req.user.id]);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'banks record cannot be getted' });\n      }\n      return res.status(200).send(JSON.stringify(rows));\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async deletebanks(req, res) {\n    const deletehospitalsQuery = \"Delete from BloodBank where admin_id=$1 and id=$2\";\n    try {\n      await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(deletehospitalsQuery,[req.user.id,req.params.bankid]);\n      return res.status(200).send({ 'message': 'deleted bank record' });\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async addhospital(req, res) {\n    if (!req.body.email || !req.body.password) {\n      return res.status(400).send({ 'message': 'Some values are missing' });\n    }\n    if (!_Helper__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isValidEmail(req.body.email)) {\n      return res\n        .status(400)\n        .send({ 'message': 'Please enter a valid email address' });\n    }\n    const hashPassword = _Helper__WEBPACK_IMPORTED_MODULE_2__[\"default\"].hashPassword(req.body.password);\n    const createQuery = 'Insert into Hospital(id, name, email, address, password, admin_id) VALUES($1, $2, $3, $4, $5, $6) returning *';\n    const values = [\n      uuid_v4__WEBPACK_IMPORTED_MODULE_0___default()(),\n      req.body.name,\n      req.body.email,\n      req.body.address,\n      hashPassword,\n      req.user.id\n    ];\n\n    try {\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(createQuery, values);\n      if (rows[0])\n        return res.status(200).send({ 'Message':'add hospital successful' });\n    } catch (error) {\n      if (error.routine === \"_bt_check_unique\") {\n        return res\n          .status(400)\n          .send({ 'message': 'hospital with that EMAIL already exist' });\n      }\n      return res.status(400).send(error);\n    }\n  },\n  async gethospitals(req, res) {\n    const gethospitalsQuery = \"Select * FROM hospital\";\n    try {\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(gethospitalsQuery);\n      console.log(rows);\n      if (!row) {\n        return res.status(404).send({ 'message': 'hospitals record cannot be getted' });\n      }\n      return res.status(200).send(JSON.stringify(rows));\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async deletehospitals(req, res) {\n    const deletehospitalsQuery = \"Delete from Hospital where admin_id=$1 and id=$2\";\n    try {\n      await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(deletehospitalsQuery,[req.user.id,req.params.hospitalid]);\n      return res.status(200).send({ 'message': 'deleted hospital record' });\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async blogin(req, res) {\n    if (!req.body.email || !req.body.password) {\n      return res.status(400).send({ 'message': 'Some values are missing' });\n    }\n    const text = \"SELECT * FROM BloodBank WHERE email = $1\";\n    try {\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(text, [req.body.email]);\n      if (!rows[0]) {\n        return res\n          .status(400)\n          .send({ 'message': 'The credentials you provided is incorrect' });\n      }\n      if (!_Helper__WEBPACK_IMPORTED_MODULE_2__[\"default\"].comparePassword(rows[0].password, req.body.password)) {\n        return res\n          .status(400)\n          .send({ 'message': 'The credentials you provided is incorrect' });\n      }\n      const token = _Helper__WEBPACK_IMPORTED_MODULE_2__[\"default\"].generateToken(rows[0].id);\n      return res.status(200).send({ token });\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async getBloodBank(req, res) {\n    const profileQuery = \"Select * FROM bloodbank\";\n    try {\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(profileQuery);\n      if (!rows) {\n        return res.status(404).send({ 'message': 'bank not found' });\n      }\n      return res.status(200).json(rows);\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async bprofile(req, res) {\n    const profileQuery = \"Select * FROM bloodbank WHERE id=$1\";\n    try {\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(profileQuery, [req.user.id]);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'bank not found' });\n      }\n      return res.status(200).send(JSON.stringify(rows[0]));\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async getdonors(req, res) {\n    const getdonorQuery = \"Select donors.* from register inner join donors on register.donor_id=donors.id where bank_id=$1 and status='A'\";\n    try {\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(getdonorQuery,[req.user.id]);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'no donors' });\n      }\n      return res.status(200).send(JSON.stringify(rows));\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async deletedonors(req, res) {\n    const getdonorQuery=\"Select * from register where bank_id=$1 and donor_id=$2\"\n    const deletedonorQuery = \"Update register set status=$1 where id=$2\";\n    try {\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(getdonorQuery,[req.user.id,req.params.donorid]);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'donors record cannot be getted' });\n      }\n      if (rows[0].status=='B'){\n        return res.status(400).send({ 'message': 'donor record already banned' });\n      }\n      await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(deletedonorQuery,['B',rows[0].id]);\n      return res.status(200).send({ 'message': 'deleted donor record' });\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async listdonate(req, res) {\n    const getorderQuery =\n      \"Select * from blood where bank_id=$1 and status='P' order by DateOfDonate\";\n    try {\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(getorderQuery, [req.user.id]);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'list donate request not found' });\n      }\n      return res.status(200).send(JSON.stringify(rows));\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async handledonate(req, res) {\n    if (!req.body.status) {\n      return res.status(400).send({ 'message': 'Some values are missing' });\n    }\n    const handledonateQuery =\n      \"Update blood set status=$1 where bank_id=$2 and id=$3 returning *\";\n    const values8=[\n      req.body.status,\n      req.user.id,\n      req.params.donate_id\n    ]\n    try {\n      await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(handledonateQuery, values8);\n      return res.status(200).send({ 'message': 'accepted donate' });\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async getstores(req, res) {\n    const getQuery = \"Select * from blood where bank_id=$1 and amount is null and status='A' order by DateOfDonate\";\n    try {\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(getQuery,[req.user.id]);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'blood record cannot be getted' });\n      }\n      return res.status(200).send(JSON.stringify(rows));\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async stores(req, res) {\n    const amountQuery = \"Update blood set amount=$1,status=$2 where id=$3\";\n    const getstoreQuery = \n      \"Select blood_type,amount from blood inner join donors on blood.donor_id=donors.id where blood.id=$1 and status='A'\"\n    const checkstorequery = \n      \"Select * from bloodstore where BloodType=$1 and bank_id=$2\";\n    const insertstoreQuery =\n      \"Insert into Bloodstore(id,BloodType,Amount,bank_id) values($1,$2,$3,$4)\";\n    const updatestoreQuery =\n      \"Update Bloodstore set Amount=$1 where id=$2\";\n    const values4 = [req.body.amount,'R', req.params.donate_id];\n    try {\n      await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(amountQuery, values4);\n      const {rows} = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(getstoreQuery,[req.params.donate_id]);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'already accepted added amount to bloodstore' });\n      }\n      const rows0 = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(checkstorequery,[rows[0].blood_type,req.user.id]);\n        if(!rows0.rows[0]){\n          await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(insertstoreQuery,[uuid_v4__WEBPACK_IMPORTED_MODULE_0___default()(),rows[0].blood_type,rows[0].amount,req.user.id])\n        } else {\n          var total_amount = rows[0].amount+rows0.rows[0].amount;\n          await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(updatestoreQuery,[total_amount,rows0.rows[0].id]);\n        }\n      return res.status(200).send({ 'message': 'updated record stored' });\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async bloodstores(req, res) {\n    const getstoreQuery = \n      \"SELECT * FROM bloodstore\";\n    try {\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(getstoreQuery);\n      if (!rows) {\n        return res.status(404).send({ 'message': 'no record' });\n      }\n      return res.status(200).json(rows);\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async getOrder(req, res) {\n    const bgetorderQuery =\n      \"Select * FROM orders\";\n    try {\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(bgetorderQuery);\n      if (!rows) {\n        return res.status(404).send({ 'message': 'no order' });\n      }\n      return res.status(200).json(rows);\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async bgetorder(req, res) {\n    const bgetorderQuery =\n      \"Select * from orders where bank_id=$1 and status='A'\";\n    try {\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(bgetorderQuery, [req.user.id]);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'no order' });\n      }\n      return res.status(200).send(JSON.stringify(rows));\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async gethandleorder(req, res) {\n    const gethandleorderQuery =\n      \"Select * from orders where bank_id=$1 and status='P'\";\n    try {\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(gethandleorderQuery, [req.user.id]);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'no order' });\n      }\n      return res.status(200).send(JSON.stringify(rows));\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async handleorder(req, res) {\n    const handleorderQuery =\n      \"Update orders set status=$1 where bank_id=$2 and id=$3 returning *\";\n    const getorderQuery =\n      \"Select * from orders where id=$1\";\n    const checkstorequery = \n      \"Select * from bloodstore where BloodType=$1 and bank_id=$2\";\n    const updatestoreQuery =\n      \"Update bloodstore set Amount=$1 where id=$2\";\n    const values8=[\n      req.body.status,\n      req.user.id,\n      req.params.orderid\n    ]\n    try {\n      await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(handleorderQuery, values8);\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(getorderQuery, [req.params.orderid]);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'cannot order' });\n      } \n      if (rows[0].status == 'R') \n        return res.status(200).send({ 'message': 'rejected order' });\n      if (rows[0].status == 'A') {\n        const rows0 = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(checkstorequery,[rows[0].bloodtype,req.user.id]);\n        if(!rows0.rows[0]){\n          return res.status(400).send({'Message': 'out of blood'})\n        } else {\n          var total_amount = rows0.rows[0].amount-rows[0].amount;\n          await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(updatestoreQuery,[total_amount,rows0.rows[0].id]);\n        }\n        return res.status(200).send({ 'message': 'accepted order' });\n      }\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async hlogin(req, res) {\n    if (!req.body.email || !req.body.password) {\n      return res.status(400).send({ 'message': 'Some values are missing' });\n    }\n    const text = \"SELECT * FROM Hospital WHERE email = $1\";\n    try {\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(text, [req.body.email]);\n      if (!rows[0]) {\n        return res\n          .status(400)\n          .send({ 'message': 'The credentials you provided is incorrect' });\n      }\n      if (!_Helper__WEBPACK_IMPORTED_MODULE_2__[\"default\"].comparePassword(rows[0].password, req.body.password)) {\n        return res\n          .status(400)\n          .send({ 'message': 'The credentials you provided is incorrect' });\n      }\n      const token = _Helper__WEBPACK_IMPORTED_MODULE_2__[\"default\"].generateToken(rows[0].id);\n      return res.status(200).send({ token });\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async getHospital(req, res) {\n    const profileQuery = \"Select * FROM hospital\";\n    try {\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(profileQuery);\n      if (!rows) {\n        return res.status(404).send({ 'message': 'hospital not found' });\n      }\n      return res.status(200).json(rows);\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async hprofile(req, res) {\n    const profileQuery = \"Select * FROM hospital WHERE id=$1\";\n    try {\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(profileQuery, [req.user.id]);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'hospital not found' });\n      }\n      return res.status(200).send(JSON.stringify(rows[0]));\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async order(req, res) {\n    const checkbankQuery = \"Select * from BloodBank where name=$1\"\n    const orderQuery =\n      \"Insert into orders(id,BloodType,Amount,hospital_id,bank_id,status) values($1,$2,$3,$4,$5,$6) returning *\";\n    try {\n      const rows0 = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(checkbankQuery, [req.body.bank_name]);\n      if (!rows0.rows[0]) {\n          return res.status(404).send({ 'message': 'bank name not found' });\n      }\n      const values6 = [\n        uuid_v4__WEBPACK_IMPORTED_MODULE_0___default()(),\n        req.body.bloodtype,\n        req.body.amount,\n        req.user.id,\n        rows0.rows[0].id,\n        'P'\n      ];\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(orderQuery, values6);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'order not found' });\n      }\n      return res.status(200).send({ 'message': 'created order' });\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async hgetorder(req, res) {\n    const hgetorderQuery =\n      \"Select * from orders where hospital_id=$1\";\n    try {\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(hgetorderQuery, [req.user.id]);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'no order' });\n      }\n      return res.status(200).send(JSON.stringify(rows));\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async editorder(req, res) {\n    const orderQuery =\n      \"Update orders set BloodType=$1,Amount=$2,hospital_id=$3 where id=$4 returning *\";\n    const values6 = [\n      req.body.bloodtype,\n      req.body.amount,\n      req.user.id,\n      req.params.orderid\n    ]\n    try {\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(orderQuery, values6);\n      if (!rows[0]) {\n        return res.status(404).send({ 'message': 'order not found' });\n      }\n      return res.status(200).send({ 'message': 'edited order' });\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async deleteorder(req, res) {\n    const ckorder = \"Select status from orders where id=$1 and hospital_id=$2\"\n    const deleteorderQuery =\n      \"Delete from orders where id=$1\";\n    const values7 = [\n      req.params.orderid,\n      req.user.id\n    ]\n    try {\n      const rows9 = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(ckorder, values7)\n      if (!rows9.rows[0]) {\n        return res.status(404).send({ 'message': 'order not found' });\n      }\n      if (rows9.rows[0] == 'A') return res.status(400).send({'message':'order already accepted'})\n      await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(deleteorderQuery, [req.params.orderid]);\n      return res.status(200).send({ 'message': 'deleted order' });\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n  async getBloodRegister(req, res) {\n    const bgetorderQuery =\n      \"Select * FROM register\";\n    try {\n      const { rows } = await _db__WEBPACK_IMPORTED_MODULE_1__[\"default\"].query(bgetorderQuery);\n      if (!rows) {\n        return res.status(404).send({ 'message': 'no order' });\n      }\n      return res.status(200).json(rows);\n    } catch (error) {\n      return res.status(400).send(error);\n    }\n  },\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Controllerdb);\n\n\n//# sourceURL=webpack:///./public/js/Controllerdb.js?");

/***/ }),

/***/ "./public/js/Helper.js":
/*!*****************************!*\
  !*** ./public/js/Helper.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var bcrypt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bcrypt */ \"bcrypt\");\n/* harmony import */ var bcrypt__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bcrypt__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jsonwebtoken */ \"jsonwebtoken\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nconst Helper = {\n  /**\n   * Hash Password Method\n   * @param {string} password\n   * @returns {string} returns hashed password\n   */\n  hashPassword(password) {\n    return bcrypt__WEBPACK_IMPORTED_MODULE_0___default.a.hashSync(password, bcrypt__WEBPACK_IMPORTED_MODULE_0___default.a.genSaltSync(8))\n  },\n  /**\n   * comparePassword\n   * @param {string} hashPassword \n   * @param {string} password \n   * @returns {Boolean} return True or False\n   */\n  comparePassword(hashPassword, password) {\n    return bcrypt__WEBPACK_IMPORTED_MODULE_0___default.a.compareSync(password, hashPassword);\n  },\n  /**\n   * isValidEmail helper method\n   * @param {string} email\n   * @returns {Boolean} True or False\n   */\n  isValidEmail(email) {\n    return /\\S+@\\S+\\.\\S+/.test(email);\n  },\n  /**\n   * Gnerate Token\n   * @param {string} id\n   * @returns {string} token\n   */\n  generateToken(id) {\n    const token = jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default.a.sign({\n      userId: id\n    },\n      process.env.SECRET, { expiresIn: '7d' }\n    );\n    return token;\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Helper);\n\n//# sourceURL=webpack:///./public/js/Helper.js?");

/***/ }),

/***/ "./public/js/db.js":
/*!*************************!*\
  !*** ./public/js/db.js ***!
  \*************************/
/*! exports provided: pool, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pool\", function() { return pool; });\n/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pg */ \"pg\");\n/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(pg__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var dotenv__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! dotenv */ \"dotenv\");\n/* harmony import */ var dotenv__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(dotenv__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\ndotenv__WEBPACK_IMPORTED_MODULE_1___default.a.config();\nconst config = {\n  user: 'postgres',\n  host: 'localhost',\n  database: 'project_dblab',\n  password: 'postgres',\n  port: 5432,\n  max: 10,\n  idleTimeoutMillis: 30000,\n}\nconst pool = new pg__WEBPACK_IMPORTED_MODULE_0___default.a.Pool(config);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  /**\n   * DB Query\n   * @param {string} text\n   * @param {Array} params\n   * @returns {object} object \n   */\n  query(text, params){\n    return new Promise((resolve, reject) => {\n      pool.query(text, params)\n      .then((res) => {\n        resolve(res);\n      })\n      .catch((err) => {\n        reject(err);\n      })\n    })\n  }\n});\n\n//# sourceURL=webpack:///./public/js/db.js?");

/***/ }),

/***/ "./public/js/server.js":
/*!*****************************!*\
  !*** ./public/js/server.js ***!
  \*****************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ \"express\");\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var body_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! body-parser */ \"body-parser\");\n/* harmony import */ var body_parser__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(body_parser__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Controllerdb__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Controllerdb */ \"./public/js/Controllerdb.js\");\n/* harmony import */ var _Auth_Authdonor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Auth/Authdonor */ \"./public/js/Auth/Authdonor.js\");\n/* harmony import */ var _Auth_Authhospital__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Auth/Authhospital */ \"./public/js/Auth/Authhospital.js\");\n/* harmony import */ var _Auth_Authbanks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Auth/Authbanks */ \"./public/js/Auth/Authbanks.js\");\n/* harmony import */ var _Auth_Authadmin__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Auth/Authadmin */ \"./public/js/Auth/Authadmin.js\");\n/* harmony import */ var cors__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! cors */ \"cors\");\n/* harmony import */ var cors__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(cors__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./db */ \"./public/js/db.js\");\n\n\n\n\n\n\n\n\n\n\nconst app = express__WEBPACK_IMPORTED_MODULE_0___default()();\nconst port = process.env.PORT || 5000;\n// create application/x-www-form-urlencoded parser\nconst urlencodedParser = body_parser__WEBPACK_IMPORTED_MODULE_1___default.a.urlencoded({ extended: true });\n\napp.use(cors__WEBPACK_IMPORTED_MODULE_7___default()());\n\napp.use(express__WEBPACK_IMPORTED_MODULE_0___default.a.static('public'));\napp.use(express__WEBPACK_IMPORTED_MODULE_0___default.a.json());\napp.use(urlencodedParser);\napp.use(body_parser__WEBPACK_IMPORTED_MODULE_1___default.a.json())\napp.listen(port, () => {\n  console.log(`App's listening on port ${port}`);\n})\n\napp.post('/helloworld', (req, result) => {\n  // callback - checkout a client\n  _db__WEBPACK_IMPORTED_MODULE_8__[\"pool\"].connect((err, client, done) => {\n    if (err) throw err\n    client.query('SELECT * FROM blood', (err, res) => {\n      done()\n\n      if (err) {\n        console.log(err.stack)\n      } else {\n        console.log(res)\n        result.send(res);\n      }\n    })\n  })\n})\n\n\n\napp.post('/', (req, res) => {\n    return res.status(200).send({'message': 'YAY! Congratulations! Your first endpoint is working'});\n});\napp.get('/blood', _Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getBlood);\napp.post('/donor/signup', urlencodedParser, _Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].create);\napp.post('/donor/login', urlencodedParser, _Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].login);\napp.get('/donor',_Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].profile);\napp.get('donor/history',_Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].history);\napp.put('/donor', urlencodedParser, _Auth_Authdonor__WEBPACK_IMPORTED_MODULE_3__[\"default\"].verifyToken, _Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].edit);\napp.post('/donor', urlencodedParser, _Auth_Authdonor__WEBPACK_IMPORTED_MODULE_3__[\"default\"].verifyToken,_Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].donate);\napp.post('/bank/signup', urlencodedParser, _Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bankSignUp);\napp.post('/bank/login', urlencodedParser, _Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].blogin);\napp.get('/bank', _Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getBloodBank);\napp.get('/bank:id', _Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bprofile);\napp.get('/bank/donors', _Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getdonors);  \napp.delete('/bank/donors/:donorid', _Auth_Authbanks__WEBPACK_IMPORTED_MODULE_5__[\"default\"].verifyToken, _Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].deletedonors);\napp.get('/bank/donate', _Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].listdonate);\napp.put('/bank/donate/:donate_id', urlencodedParser, _Auth_Authbanks__WEBPACK_IMPORTED_MODULE_5__[\"default\"].verifyToken,_Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].handledonate)  \napp.get('/bank/store', _Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getstores);\napp.put('/bank/store/:donate_id', urlencodedParser, _Auth_Authbanks__WEBPACK_IMPORTED_MODULE_5__[\"default\"].verifyToken,_Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].stores);\napp.get('/bloodstore', _Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bloodstores);\napp.get('/bank/order', _Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bgetorder);\napp.get('/bank/handleorder', _Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].gethandleorder);\napp.put('/bank/handleorder/:orderid', urlencodedParser, _Auth_Authbanks__WEBPACK_IMPORTED_MODULE_5__[\"default\"].verifyToken,_Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].handleorder);\napp.post('/hospital/signup', urlencodedParser, _Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].hospitalSignUp);\napp.post('/hospital/login', urlencodedParser, _Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].hlogin);\napp.get('/hospital', _Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getHospital);\napp.get('/hospital:id', _Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].hprofile);\napp.get('/hospital/order', _Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].hgetorder);\napp.post('/hospital/order', urlencodedParser, _Auth_Authhospital__WEBPACK_IMPORTED_MODULE_4__[\"default\"].verifyToken,_Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].order);\napp.put('/hospital/order/:orderid', urlencodedParser, _Auth_Authhospital__WEBPACK_IMPORTED_MODULE_4__[\"default\"].verifyToken,_Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].editorder);\napp.delete('/hospital/order/:orderid',_Auth_Authhospital__WEBPACK_IMPORTED_MODULE_4__[\"default\"].verifyToken,_Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].deleteorder);\napp.post('/admin/signup', urlencodedParser, _Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].adminSignUp);\napp.post('/admin/login', urlencodedParser, _Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].alogin);\napp.post('/admin/addbank', urlencodedParser, _Auth_Authadmin__WEBPACK_IMPORTED_MODULE_6__[\"default\"].verifyToken,_Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].addbank);\napp.get('/admin/banks', _Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getbanks);\napp.delete('/admin/banks/:bankid',_Auth_Authadmin__WEBPACK_IMPORTED_MODULE_6__[\"default\"].verifyToken,_Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].deletebanks);  \napp.post('/admin/addhospital', urlencodedParser, _Auth_Authadmin__WEBPACK_IMPORTED_MODULE_6__[\"default\"].verifyToken,_Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].addhospital);\napp.get('/admin', _Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getAdmin);\napp.get('/admin/hospitals', _Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].gethospitals);\napp.delete('/admin/hospitals/:hospitalid',_Auth_Authadmin__WEBPACK_IMPORTED_MODULE_6__[\"default\"].verifyToken,_Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].deletehospitals);\napp.get('/order', _Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getOrder);\napp.get('/blood-register', _Controllerdb__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getBloodRegister);\n\n//# sourceURL=webpack:///./public/js/server.js?");

/***/ }),

/***/ "bcrypt":
/*!*************************!*\
  !*** external "bcrypt" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"bcrypt\");\n\n//# sourceURL=webpack:///external_%22bcrypt%22?");

/***/ }),

/***/ "body-parser":
/*!******************************!*\
  !*** external "body-parser" ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"body-parser\");\n\n//# sourceURL=webpack:///external_%22body-parser%22?");

/***/ }),

/***/ "cors":
/*!***********************!*\
  !*** external "cors" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"cors\");\n\n//# sourceURL=webpack:///external_%22cors%22?");

/***/ }),

/***/ "dotenv":
/*!*************************!*\
  !*** external "dotenv" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"dotenv\");\n\n//# sourceURL=webpack:///external_%22dotenv%22?");

/***/ }),

/***/ "express":
/*!**************************!*\
  !*** external "express" ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"express\");\n\n//# sourceURL=webpack:///external_%22express%22?");

/***/ }),

/***/ "jsonwebtoken":
/*!*******************************!*\
  !*** external "jsonwebtoken" ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"jsonwebtoken\");\n\n//# sourceURL=webpack:///external_%22jsonwebtoken%22?");

/***/ }),

/***/ "pg":
/*!*********************!*\
  !*** external "pg" ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"pg\");\n\n//# sourceURL=webpack:///external_%22pg%22?");

/***/ }),

/***/ "uuid/v4":
/*!**************************!*\
  !*** external "uuid/v4" ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"uuid/v4\");\n\n//# sourceURL=webpack:///external_%22uuid/v4%22?");

/***/ })

/******/ });